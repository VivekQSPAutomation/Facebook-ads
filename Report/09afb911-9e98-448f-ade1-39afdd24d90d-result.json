{"name": "test_negative_personal_date_details[04/01/2006]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: You must be 18 years or older\nMessage: unexpected alert open: {Alert text : You must be 18 years or older}\n  (Session info: chrome=123.0.6312.87)\nStacktrace:\n0   chromedriver                        0x000000010fbce128 chromedriver + 4596008\n1   chromedriver                        0x000000010fbc5e93 chromedriver + 4562579\n2   chromedriver                        0x000000010f7c939a chromedriver + 381850\n3   chromedriver                        0x000000010f8559f2 chromedriver + 956914\n4   chromedriver                        0x000000010f834ee3 chromedriver + 823011\n5   chromedriver                        0x000000010f805be4 chromedriver + 629732\n6   chromedriver                        0x000000010f80679e chromedriver + 632734\n7   chromedriver                        0x000000010fb94042 chromedriver + 4358210\n8   chromedriver                        0x000000010fb98c8d chromedriver + 4377741\n9   chromedriver                        0x000000010fb98603 chromedriver + 4376067\n10  chromedriver                        0x000000010fb98f35 chromedriver + 4378421\n11  chromedriver                        0x000000010fb7da65 chromedriver + 4266597\n12  chromedriver                        0x000000010fb992bd chromedriver + 4379325\n13  chromedriver                        0x000000010fb700b0 chromedriver + 4210864\n14  chromedriver                        0x000000010fbb6af8 chromedriver + 4500216\n15  chromedriver                        0x000000010fbb6c71 chromedriver + 4500593\n16  chromedriver                        0x000000010fbc5ad3 chromedriver + 4561619\n17  libsystem_pthread.dylib             0x00007ff80f83b1d3 _pthread_start + 125\n18  libsystem_pthread.dylib             0x00007ff80f836bd3 thread_start + 15", "trace": "self = <Influencers_cases.test_negative_cases.TestNegative object at 0x7fc21e51da60>, test_date_cases = '04/01/2006'\nses_init = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a5ff1ad6e25fd3bcd11b2f681faf08c8\")>\nrequest = <FixtureRequest for <Function test_negative_personal_date_details[04/01/2006]>>\n\n    @allure.feature(\"Negative Cases\")\n    @allure.story(\"High Tests\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.high\n    @pytest.mark.run(order=Order.Negative_personal_date)\n    def test_negative_personal_date_details(self, test_date_cases, ses_init, request):\n        # remove_files_in_directory(f\"{os.getcwd()}/screenshots\")\n        # screen = recording_and_capturing_screen(ses_init, request.node.name)\n        obj = NegativePersonal_pages(ses_init)\n>       obj.get_personal_date_details(test_date_cases)\n\nInfluencers_cases/test_negative_cases.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nInfluencers_negative_cases/Negative_personal_details.py:68: in get_personal_date_details\n    WebDriverWait(self.driver, 8)\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:92: in until\n    value = method(self._driver)\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:150: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc21e7c3dc0>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"You must be 18 years or older\"},\"error\":\"unexpected alert open\",\"m...ff80f83b1d3 _pthread_start + 125\\\\n18  libsystem_pthread.dylib             0x00007ff80f836bd3 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: You must be 18 years or older\nE           Message: unexpected alert open: {Alert text : You must be 18 years or older}\nE             (Session info: chrome=123.0.6312.87)\nE           Stacktrace:\nE           0   chromedriver                        0x000000010fbce128 chromedriver + 4596008\nE           1   chromedriver                        0x000000010fbc5e93 chromedriver + 4562579\nE           2   chromedriver                        0x000000010f7c939a chromedriver + 381850\nE           3   chromedriver                        0x000000010f8559f2 chromedriver + 956914\nE           4   chromedriver                        0x000000010f834ee3 chromedriver + 823011\nE           5   chromedriver                        0x000000010f805be4 chromedriver + 629732\nE           6   chromedriver                        0x000000010f80679e chromedriver + 632734\nE           7   chromedriver                        0x000000010fb94042 chromedriver + 4358210\nE           8   chromedriver                        0x000000010fb98c8d chromedriver + 4377741\nE           9   chromedriver                        0x000000010fb98603 chromedriver + 4376067\nE           10  chromedriver                        0x000000010fb98f35 chromedriver + 4378421\nE           11  chromedriver                        0x000000010fb7da65 chromedriver + 4266597\nE           12  chromedriver                        0x000000010fb992bd chromedriver + 4379325\nE           13  chromedriver                        0x000000010fb700b0 chromedriver + 4210864\nE           14  chromedriver                        0x000000010fbb6af8 chromedriver + 4500216\nE           15  chromedriver                        0x000000010fbb6c71 chromedriver + 4500593\nE           16  chromedriver                        0x000000010fbc5ad3 chromedriver + 4561619\nE           17  libsystem_pthread.dylib             0x00007ff80f83b1d3 _pthread_start + 125\nE           18  libsystem_pthread.dylib             0x00007ff80f836bd3 thread_start + 15\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException"}, "attachments": [{"name": "test_negative_personal_date_details[04/01/2006]_2024-03-27.png", "source": "3c2eac08-1341-4dfd-8f1e-bebe09851ff2-attachment.png", "type": "image/png"}, {"name": "test_negative_personal_date_details[04/01/2006]_error_logs.txt", "source": "c3a88980-d825-4205-bdd3-4fa437958806-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_date_cases", "value": "'04/01/2006'"}], "start": 1711559354253, "stop": 1711559359289, "uuid": "9cfd7ce4-778b-42d3-b999-e4a61a7edfca", "historyId": "3cf63e2dc7536e94387eb24c137cebef", "testCaseId": "187ddc7300f03ba3feb4e7d52213cc05", "fullName": "Influencers_cases.test_negative_cases.TestNegative#test_negative_personal_date_details", "labels": [{"name": "story", "value": "High Tests"}, {"name": "feature", "value": "Negative Cases"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "run(order=38)"}, {"name": "tag", "value": "high"}, {"name": "parentSuite", "value": "Influencers_cases"}, {"name": "suite", "value": "test_negative_cases"}, {"name": "subSuite", "value": "TestNegative"}, {"name": "host", "value": "vigupta-LTM"}, {"name": "thread", "value": "85231-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Influencers_cases.test_negative_cases"}]}