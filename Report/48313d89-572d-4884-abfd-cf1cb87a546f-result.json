{"name": "test_negative_compensation[-1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010fbce128 chromedriver + 4596008\n1   chromedriver                        0x000000010fbc5e93 chromedriver + 4562579\n2   chromedriver                        0x000000010f7c939a chromedriver + 381850\n3   chromedriver                        0x000000010f812f08 chromedriver + 683784\n4   chromedriver                        0x000000010f813191 chromedriver + 684433\n5   chromedriver                        0x000000010f857b14 chromedriver + 965396\n6   chromedriver                        0x000000010f83516d chromedriver + 823661\n7   chromedriver                        0x000000010f85514d chromedriver + 954701\n8   chromedriver                        0x000000010f834ee3 chromedriver + 823011\n9   chromedriver                        0x000000010f805be4 chromedriver + 629732\n10  chromedriver                        0x000000010f80679e chromedriver + 632734\n11  chromedriver                        0x000000010fb94042 chromedriver + 4358210\n12  chromedriver                        0x000000010fb98c8d chromedriver + 4377741\n13  chromedriver                        0x000000010fb98603 chromedriver + 4376067\n14  chromedriver                        0x000000010fb98f35 chromedriver + 4378421\n15  chromedriver                        0x000000010fb7da65 chromedriver + 4266597\n16  chromedriver                        0x000000010fb992bd chromedriver + 4379325\n17  chromedriver                        0x000000010fb700b0 chromedriver + 4210864\n18  chromedriver                        0x000000010fbb6af8 chromedriver + 4500216\n19  chromedriver                        0x000000010fbb6c71 chromedriver + 4500593\n20  chromedriver                        0x000000010fbc5ad3 chromedriver + 4561619\n21  libsystem_pthread.dylib             0x00007ff80f83b1d3 _pthread_start + 125\n22  libsystem_pthread.dylib             0x00007ff80f836bd3 thread_start + 15", "trace": "self = <Influencers_cases.test_negative_cases.TestNegative object at 0x7fc21e512ee0>, test_compenstation_data = '-1'\nses_init = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a5ff1ad6e25fd3bcd11b2f681faf08c8\")>\nrequest = <FixtureRequest for <Function test_negative_compensation[-1]>>\n\n    @allure.feature(\"Negative Cases\")\n    @allure.story(\"High Tests\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.high\n    @pytest.mark.run(order=Order.Negative_compensation)\n    def test_negative_compensation(self, test_compenstation_data, ses_init, request):\n        # remove_files_in_directory(f\"{os.getcwd()}/screenshots\")\n        # screen = recording_and_capturing_screen(ses_init, request.node.name)\n        obj = NegativeCompensation_pages(ses_init)\n>       obj.get_compensation_details(test_compenstation_data)\n\nInfluencers_cases/test_negative_cases.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nInfluencers_negative_cases/Negative_compensation.py:43: in get_compensation_details\n    WebDriverWait(self.driver, 8)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a5ff1ad6e25fd3bcd11b2f681faf08c8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fc21e939a60>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010fbce128 chromedriver + 4596008\nE       1   chromedriver                        0x000000010fbc5e93 chromedriver + 4562579\nE       2   chromedriver                        0x000000010f7c939a chromedriver + 381850\nE       3   chromedriver                        0x000000010f812f08 chromedriver + 683784\nE       4   chromedriver                        0x000000010f813191 chromedriver + 684433\nE       5   chromedriver                        0x000000010f857b14 chromedriver + 965396\nE       6   chromedriver                        0x000000010f83516d chromedriver + 823661\nE       7   chromedriver                        0x000000010f85514d chromedriver + 954701\nE       8   chromedriver                        0x000000010f834ee3 chromedriver + 823011\nE       9   chromedriver                        0x000000010f805be4 chromedriver + 629732\nE       10  chromedriver                        0x000000010f80679e chromedriver + 632734\nE       11  chromedriver                        0x000000010fb94042 chromedriver + 4358210\nE       12  chromedriver                        0x000000010fb98c8d chromedriver + 4377741\nE       13  chromedriver                        0x000000010fb98603 chromedriver + 4376067\nE       14  chromedriver                        0x000000010fb98f35 chromedriver + 4378421\nE       15  chromedriver                        0x000000010fb7da65 chromedriver + 4266597\nE       16  chromedriver                        0x000000010fb992bd chromedriver + 4379325\nE       17  chromedriver                        0x000000010fb700b0 chromedriver + 4210864\nE       18  chromedriver                        0x000000010fbb6af8 chromedriver + 4500216\nE       19  chromedriver                        0x000000010fbb6c71 chromedriver + 4500593\nE       20  chromedriver                        0x000000010fbc5ad3 chromedriver + 4561619\nE       21  libsystem_pthread.dylib             0x00007ff80f83b1d3 _pthread_start + 125\nE       22  libsystem_pthread.dylib             0x00007ff80f836bd3 thread_start + 15\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:101: TimeoutException"}, "attachments": [{"name": "test_negative_compensation[-1]_2024-03-27.png", "source": "2b0e3be4-15fd-4534-8304-09bbb465b882-attachment.png", "type": "image/png"}, {"name": "test_negative_compensation[-1]_error_logs.txt", "source": "61b90e11-0430-4699-9a5f-1fa1e4c99f79-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_compenstation_data", "value": "'-1'"}], "start": 1711559138607, "stop": 1711559159866, "uuid": "a9bab2f5-47de-4f1a-b936-3c59a54d5a8c", "historyId": "cea0ff4bac25a8eee61c69eb350f5bbe", "testCaseId": "80f5d0c9ea64bc81226a524d301ed52a", "fullName": "Influencers_cases.test_negative_cases.TestNegative#test_negative_compensation", "labels": [{"name": "story", "value": "High Tests"}, {"name": "feature", "value": "Negative Cases"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "run(order=36)"}, {"name": "tag", "value": "high"}, {"name": "parentSuite", "value": "Influencers_cases"}, {"name": "suite", "value": "test_negative_cases"}, {"name": "subSuite", "value": "TestNegative"}, {"name": "host", "value": "vigupta-LTM"}, {"name": "thread", "value": "85231-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Influencers_cases.test_negative_cases"}]}